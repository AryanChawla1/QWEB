{"version":3,"sources":["pages/Splash.js","Main.js","helpers.js","components/Tile.js","components/Tiles.js","components/Board.js","pages/App.js","reportWebVitals.js","index.js"],"names":["Splash","react_default","a","createElement","className","Main","react_router","exact","path","element","pages_App","pages_Splash","helpers","tile","tileWidth","x","col","y","row","min","max","Math","floor","random","Tile","_ref","width","tiles","boardWidth","tileHeld","tileReleased","tileMovedOnto","visualPos","fontSize","id","motionStyle","translateX","spring","stiffness","damping","translateY","react_motion","style","_ref2","onMouseDown","onMouseUp","onMouseLeave","onMouseEnter","height","transform","concat","text","Tiles","moveRow","moveCol","checkIfComplete","setTiles","_useState","useState","_useState2","Object","slicedToArray","heldTile","setHeldTile","t","console","log","map","components_Tile","key","Board","components_Tiles","App","setWidth","_useState3","_useState4","completedBoard","setCompletedBoard","initTiles","w","newTiles","i","pow","push","String","fromCharCode","_useState5","_useState6","dir","rowTiles","rowTiles0","length","JSON","parse","stringify","splice","colTiles","colTiles0","src_Main","onClick","shuffleTiles","components_Board","setTimeout","alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","react_router_dom","document","getElementById"],"mappings":"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","file":"static/js/main.b4bf8f1b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Splash = () => {\r\n   return(\r\n      <div>\r\n         <div className=\"titleText\">TORUS PUZZLE</div>\r\n         <div className=\"buttonsMainPage\">\r\n            <button className=\"button1\" >Daily</button>\r\n            <button className=\"button1\">Classic</button>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Splash","import React from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\n\r\nimport App from './pages/App';\r\nimport Splash from './pages/Splash';\r\n\r\nconst Main = () => {\r\n   return (\r\n      <Routes>\r\n         <Route exact path = '/app' element={<App />}></Route>\r\n         <Route exact path = '/splash' element={<Splash />}></Route>\r\n      </Routes>\r\n   );\r\n}\r\n\r\nexport default Main;","const getTileFromId = (id, tiles) => {\r\n    for (let i=0; i<tiles.length; i++) {\r\n      if (tiles[i].id === id) {\r\n        return tiles[i-1]\r\n      }\r\n    }\r\n    console.log(\"[!] getTileFromId - no element found\")\r\n  }\r\n\r\n\r\nconst packageTiles = (tiles, width) => {\r\n    // Cleans up tiles array for use in the the backend (2D Array of ids)\r\n    const tileIds = tiles.map((tile) => tile.id)\r\n    let packagedTiles = []\r\n    for (let row=0; row<width; row++) {\r\n      packagedTiles.push([])\r\n      for (let col=0; col<width; col++) {\r\n        packagedTiles[row].push(tileIds[row*width + col])\r\n      }\r\n    }\r\n    return packagedTiles\r\n  }\r\n\r\nconst getVisualPosition = (tile, tileWidth) => {\r\n  return {\r\n    x: tile.col * tileWidth,\r\n    y: tile.row * tileWidth\r\n  }\r\n}\r\n\r\nconst randInt = (min, max) => {\r\n  //Random integer from min to max (inclusive)\r\n\treturn Math.floor(Math.random() * (max + 1 - min)) + min;\r\n}\r\n\r\n\r\nexport default {getTileFromId, packageTiles, getVisualPosition, randInt}\r\n","import React from 'react'\nimport { Motion, spring } from \"react-motion\"\nimport helpers from '../helpers'\n\nconst Tile = ({ width, tiles, tile, boardWidth, tileHeld, tileReleased, tileMovedOnto }) => {\n  const tileWidth = boardWidth / width\n  const visualPos = helpers.getVisualPosition(tile, tileWidth)\n  const fontSize = ((tile.id < 100) ? tileWidth * 0.6 : tileWidth * 0.55) //Allows 3 digit numbers to fit in box (e.g. 100)\n  const motionStyle = {\n    translateX: spring(visualPos.x, { stiffness: 800, damping: 50 }),\n    translateY: spring(visualPos.y, { stiffness: 800, damping: 50 })\n  }\n\n  return (\n    <Motion style={motionStyle}>\n      {({ translateX, translateY }) => (\n        <button className=\"tile\" onMouseDown={() => tileHeld(tile)} onMouseUp={() => tileReleased(tile)}\n        onMouseLeave={() => tileReleased(tile)} onMouseEnter={() => tileMovedOnto(tile)}\n        style={{\n          width: tileWidth,\n          height: tileWidth,\n          transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\n          }}>\n          <div className=\"tileOuter\"\n          style={{\n            width: tileWidth,\n            height: tileWidth,\n            }}>\n          </div>\n          <div className=\"tileInner\"\n            style={{\n              width: tileWidth*0.95,\n              height: tileWidth*0.95,\n              fontSize: fontSize,\n              // backgroundColor: \"rgba(\" + (255 / (width)) * (width - ((tile.id - 1) % width)) + \",\" + (220 / (width - 1)) * Math.floor((tile.id - 1) / width) + \",\" + (220 / (width - 1)) * ((tile.id - 1) % width) + \",\" + 0.8 +\")\",\n            }}>\n            {tile.text}\n          </div>\n        </button>\n      )}\n    </Motion>\n  )\n}\n\nexport default Tile","import { useState } from 'react'\r\nimport React from 'react'\r\nimport Tile from './Tile'\r\n\r\nconst Tiles = ({ width, tiles, boardWidth, moveRow, moveCol, checkIfComplete, setTiles }) => {\r\n  const [heldTile, setHeldTile] = useState(null)\r\n\r\n  const tileHeld = (t) => {\r\n    setHeldTile(t)\r\n  }\r\n  const tileReleased = (t) => {\r\n    setHeldTile(null)\r\n  }\r\n\r\n  const tileMovedOnto = (t) => {\r\n    if (heldTile != null) {\r\n      if (heldTile.row < t.row) { moveCol(tiles, t.col, 1) }\r\n      else if (heldTile.row > t.row) { setTiles(moveCol(tiles, t.col, -1)) }\r\n      else if (heldTile.col < t.col) { setTiles(moveRow(tiles, t.row, 1)) }\r\n      else if (heldTile.col > t.col) { setTiles(moveRow(tiles, t.row, -1)) }\r\n      else { console.log(\"[!] Error in Tiles/tileMovedOnto\") }\r\n      checkIfComplete()\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {tiles.map((tile) => (\r\n        <Tile key={tile.text} tiles={tiles} width={width} tile={tile} boardWidth={boardWidth}\r\n          moveRow={moveRow} moveCol={moveCol} tileHeld={tileHeld} tileReleased={tileReleased}\r\n          tileMovedOnto={tileMovedOnto} checkIfComplete={checkIfComplete} />\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Tiles","import React from 'react'\r\nimport Tiles from './Tiles'\r\n\r\nconst Board = ({width, tiles, boardWidth, moveRow, moveCol, checkIfComplete, setTiles}) => {\r\n  return (   \r\n    <div className=\"board\" style={{width: boardWidth, height: boardWidth}}>\r\n        <Tiles width={width} tiles={tiles} boardWidth={boardWidth} moveRow={moveRow} moveCol={moveCol}\r\n          checkIfComplete={checkIfComplete} setTiles={setTiles}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","//Todo:\r\n//Move Board functions to Board.js\r\n//Have tile sliding be continuous instead of one move at a time\r\n\r\nimport Main from '../Main'\r\nimport React, { useState } from 'react';\r\nimport '../styles/App.css';\r\nimport Board from '../components/Board';\r\nimport helpers from '../helpers';\r\n\r\nconst App = () => {\r\n  const boardWidth = 500\r\n  let [width, setWidth] = useState(3) //width in tiles\r\n  let [completedBoard, setCompletedBoard] = useState([])\r\n\r\n  const initTiles = (w) => {\r\n    let newTiles = []\r\n    for (let i = 0; i < w ** 2; i++) {\r\n      newTiles.push(\r\n        {\r\n          id: i + 1,\r\n          row: Math.floor(i / w), // Position in array\r\n          col: i % w,\r\n        }\r\n      )\r\n    }\r\n    for (let i = 0; i < w ** 2; i++) {\r\n      if (w <= 5) {\r\n        newTiles[i].text = String.fromCharCode(65 + i)\r\n      }\r\n      else {\r\n        newTiles[i].text = i + 1\r\n      }\r\n    }\r\n    return newTiles\r\n  }\r\n\r\n  const [tiles, setTiles] = useState(() => initTiles(width))\r\n\r\n  const incWidth = () => {\r\n    if (width < 10) {\r\n      width += 1\r\n      setWidth(width)\r\n      setTiles(initTiles(width))\r\n      setCompletedBoard([])\r\n    }\r\n  }\r\n\r\n  const decWidth = () => {\r\n    if (width > 3) {\r\n      width -= 1\r\n      setWidth(width)\r\n      setTiles(initTiles(width))\r\n      setCompletedBoard([])\r\n    }\r\n  }\r\n\r\n  const moveRow = (tiles, row, dir) => { //dir 1 = move row right, -1 = move row left\r\n    let rowTiles = []\r\n    let rowTiles0 = []\r\n    for (let i = 0; i < tiles.length; i++) {\r\n      if (tiles[i].row === row) {\r\n        rowTiles.push(JSON.parse(JSON.stringify(tiles[i])))\r\n        rowTiles0.push(JSON.parse(JSON.stringify(tiles[i])))\r\n      }\r\n    }\r\n    for (let i = 0; i < rowTiles0.length; i++) {\r\n      rowTiles[(((i - dir) % rowTiles0.length) + rowTiles0.length) % rowTiles0.length].col = rowTiles0[i].col\r\n      tiles.splice(rowTiles0[i].row * width + rowTiles0[i].col, 1, rowTiles[(((i - dir) % rowTiles.length) + rowTiles.length) % rowTiles.length]);\r\n    }\r\n    return JSON.parse(JSON.stringify(tiles))\r\n  }\r\n\r\n  const moveCol = (tiles, col, dir) => {\r\n    let colTiles = []\r\n    let colTiles0 = []\r\n    for (let i = 0; i < tiles.length; i++) {\r\n      if (tiles[i].col === col) {\r\n        colTiles.push(JSON.parse(JSON.stringify(tiles[i])))\r\n        colTiles0.push(JSON.parse(JSON.stringify(tiles[i])))\r\n      }\r\n    }\r\n    for (let i = 0; i < colTiles0.length; i++) {\r\n      colTiles[(((i - dir) % colTiles0.length) + colTiles0.length) % colTiles0.length].row = colTiles0[i].row\r\n      tiles.splice(colTiles0[i].row * width + colTiles0[i].col, 1, colTiles[(((i - dir) % colTiles.length) + colTiles.length) % colTiles.length]);\r\n    }\r\n    return JSON.parse(JSON.stringify(tiles))\r\n  }\r\n\r\n  const shuffleTiles = (w) => {\r\n    let newTiles = initTiles(w)\r\n    for (let i = 0; i < 75; i++) {\r\n      newTiles = moveRow(newTiles, helpers.randInt(0, w-1), helpers.randInt(0,1))\r\n      newTiles = moveCol(newTiles, helpers.randInt(0, w-1), helpers.randInt(0,1))\r\n    }\r\n\r\n    setCompletedBoard(initTiles(w))\r\n    setTiles(newTiles)\r\n  }\r\n\r\n  const checkIfComplete = () => {\r\n    if (JSON.stringify(tiles) === JSON.stringify(completedBoard)) {\r\n      setTimeout(function () { alert(\"Well Done!\") }, 260); //Activates too early if there isnt a delay\r\n      setCompletedBoard([])\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Main />\r\n      <div className=\"topbar\">\r\n        <button onClick={decWidth}>-</button>  &ensp;\r\n        <span className=\"gradtext\">Board Size</span>  &ensp;\r\n        <button onClick={incWidth}>+</button>\r\n        &emsp;&emsp;&emsp;&emsp;&emsp;\r\n      </div>\r\n      <div className=\"titleText\">TORUS PUZZLE</div>\r\n      <div className=\"buttonsMainPage\">\r\n        <button className=\"button1\" onClick={() => shuffleTiles(width)}>Shuffle</button>\r\n        <button className=\"button1\">Button</button>\r\n      </div>\r\n      <Board width={width} tiles={tiles} boardWidth={boardWidth} moveRow={moveRow} moveCol={moveCol}\r\n        checkIfComplete={checkIfComplete} setTiles={setTiles} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\n\r\n//console.log(JSON.parse(JSON.stringify(object)))","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render((\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n), document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}