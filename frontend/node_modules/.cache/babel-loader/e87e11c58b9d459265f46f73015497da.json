{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Aryan Chawla\\\\QWEB\\\\frontend\\\\src\\\\components\\\\Tile.js\";\n\nimport React from 'react';\nimport { Motion, spring } from \"react-motion\";\nimport helpers from '../helpers';\n\nvar Tile = function Tile(_ref) {\n  var width = _ref.width,\n      tiles = _ref.tiles,\n      tile = _ref.tile,\n      boardWidth = _ref.boardWidth,\n      tileHeld = _ref.tileHeld,\n      tileReleased = _ref.tileReleased,\n      tileMovedOnto = _ref.tileMovedOnto;\n  var tileWidth = boardWidth / width;\n  var visualPos = helpers.getVisualPosition(tile, tileWidth);\n  var fontSize = tile.id < 100 ? tileWidth * 0.6 : tileWidth * 0.55; //Allows 3 digit numbers to fit in box (e.g. 100)\n\n  var motionStyle = {\n    translateX: spring(visualPos.x, {\n      stiffness: 800,\n      damping: 50\n    }),\n    translateY: spring(visualPos.y, {\n      stiffness: 800,\n      damping: 50\n    })\n  };\n  return /*#__PURE__*/React.createElement(Motion, {\n    style: motionStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, function (_ref2) {\n    var translateX = _ref2.translateX,\n        translateY = _ref2.translateY;\n    return /*#__PURE__*/React.createElement(\"button\", {\n      className: \"tile\",\n      onMouseDown: function onMouseDown() {\n        return tileHeld(tile);\n      },\n      onMouseUp: function onMouseUp() {\n        return tileReleased(tile);\n      },\n      onMouseLeave: function onMouseLeave() {\n        return tileReleased(tile);\n      },\n      onMouseEnter: function onMouseEnter() {\n        return tileMovedOnto(tile);\n      },\n      style: {\n        width: tileWidth,\n        height: tileWidth,\n        transform: \"translate3d(\".concat(translateX, \"px, \").concat(translateY, \"px, 0)\")\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tileOuter\",\n      style: {\n        width: tileWidth,\n        height: tileWidth\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tileInner\",\n      style: {\n        width: tileWidth * 0.95,\n        height: tileWidth * 0.95,\n        fontSize: fontSize // backgroundColor: \"rgba(\" + (255 / (width)) * (width - ((tile.id - 1) % width)) + \",\" + (220 / (width - 1)) * Math.floor((tile.id - 1) / width) + \",\" + (220 / (width - 1)) * ((tile.id - 1) % width) + \",\" + 0.8 +\")\",\n\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, tile.text));\n  });\n};\n\nexport default Tile;","map":{"version":3,"sources":["C:/Users/Aryan Chawla/QWEB/frontend/src/components/Tile.js"],"names":["React","Motion","spring","helpers","Tile","width","tiles","tile","boardWidth","tileHeld","tileReleased","tileMovedOnto","tileWidth","visualPos","getVisualPosition","fontSize","id","motionStyle","translateX","x","stiffness","damping","translateY","y","height","transform","text"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAA+E;AAAA,MAA5EC,KAA4E,QAA5EA,KAA4E;AAAA,MAArEC,KAAqE,QAArEA,KAAqE;AAAA,MAA9DC,IAA8D,QAA9DA,IAA8D;AAAA,MAAxDC,UAAwD,QAAxDA,UAAwD;AAAA,MAA5CC,QAA4C,QAA5CA,QAA4C;AAAA,MAAlCC,YAAkC,QAAlCA,YAAkC;AAAA,MAApBC,aAAoB,QAApBA,aAAoB;AAC1F,MAAMC,SAAS,GAAGJ,UAAU,GAAGH,KAA/B;AACA,MAAMQ,SAAS,GAAGV,OAAO,CAACW,iBAAR,CAA0BP,IAA1B,EAAgCK,SAAhC,CAAlB;AACA,MAAMG,QAAQ,GAAKR,IAAI,CAACS,EAAL,GAAU,GAAX,GAAkBJ,SAAS,GAAG,GAA9B,GAAoCA,SAAS,GAAG,IAAlE,CAH0F,CAGlB;;AACxE,MAAMK,WAAW,GAAG;AAClBC,IAAAA,UAAU,EAAEhB,MAAM,CAACW,SAAS,CAACM,CAAX,EAAc;AAAEC,MAAAA,SAAS,EAAE,GAAb;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAd,CADA;AAElBC,IAAAA,UAAU,EAAEpB,MAAM,CAACW,SAAS,CAACU,CAAX,EAAc;AAAEH,MAAAA,SAAS,EAAE,GAAb;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAd;AAFA,GAApB;AAKA,sBACE,oBAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,QAAeI,UAAf,SAAeA,UAAf;AAAA,wBACC;AAAQ,MAAA,SAAS,EAAC,MAAlB;AAAyB,MAAA,WAAW,EAAE;AAAA,eAAMb,QAAQ,CAACF,IAAD,CAAd;AAAA,OAAtC;AAA4D,MAAA,SAAS,EAAE;AAAA,eAAMG,YAAY,CAACH,IAAD,CAAlB;AAAA,OAAvE;AACA,MAAA,YAAY,EAAE;AAAA,eAAMG,YAAY,CAACH,IAAD,CAAlB;AAAA,OADd;AACwC,MAAA,YAAY,EAAE;AAAA,eAAMI,aAAa,CAACJ,IAAD,CAAnB;AAAA,OADtD;AAEA,MAAA,KAAK,EAAE;AACLF,QAAAA,KAAK,EAAEO,SADF;AAELY,QAAAA,MAAM,EAAEZ,SAFH;AAGLa,QAAAA,SAAS,wBAAiBP,UAAjB,iBAAkCI,UAAlC;AAHJ,OAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOE;AAAK,MAAA,SAAS,EAAC,WAAf;AACA,MAAA,KAAK,EAAE;AACLjB,QAAAA,KAAK,EAAEO,SADF;AAELY,QAAAA,MAAM,EAAEZ;AAFH,OADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,eAaE;AAAK,MAAA,SAAS,EAAC,WAAf;AACE,MAAA,KAAK,EAAE;AACLP,QAAAA,KAAK,EAAEO,SAAS,GAAC,IADZ;AAELY,QAAAA,MAAM,EAAEZ,SAAS,GAAC,IAFb;AAGLG,QAAAA,QAAQ,EAAEA,QAHL,CAIL;;AAJK,OADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOGR,IAAI,CAACmB,IAPR,CAbF,CADD;AAAA,GADH,CADF;AA6BD,CAtCD;;AAwCA,eAAetB,IAAf","sourcesContent":["import React from 'react'\nimport { Motion, spring } from \"react-motion\"\nimport helpers from '../helpers'\n\nconst Tile = ({ width, tiles, tile, boardWidth, tileHeld, tileReleased, tileMovedOnto }) => {\n  const tileWidth = boardWidth / width\n  const visualPos = helpers.getVisualPosition(tile, tileWidth)\n  const fontSize = ((tile.id < 100) ? tileWidth * 0.6 : tileWidth * 0.55) //Allows 3 digit numbers to fit in box (e.g. 100)\n  const motionStyle = {\n    translateX: spring(visualPos.x, { stiffness: 800, damping: 50 }),\n    translateY: spring(visualPos.y, { stiffness: 800, damping: 50 })\n  }\n\n  return (\n    <Motion style={motionStyle}>\n      {({ translateX, translateY }) => (\n        <button className=\"tile\" onMouseDown={() => tileHeld(tile)} onMouseUp={() => tileReleased(tile)}\n        onMouseLeave={() => tileReleased(tile)} onMouseEnter={() => tileMovedOnto(tile)}\n        style={{\n          width: tileWidth,\n          height: tileWidth,\n          transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\n          }}>\n          <div className=\"tileOuter\"\n          style={{\n            width: tileWidth,\n            height: tileWidth,\n            }}>\n          </div>\n          <div className=\"tileInner\"\n            style={{\n              width: tileWidth*0.95,\n              height: tileWidth*0.95,\n              fontSize: fontSize,\n              // backgroundColor: \"rgba(\" + (255 / (width)) * (width - ((tile.id - 1) % width)) + \",\" + (220 / (width - 1)) * Math.floor((tile.id - 1) / width) + \",\" + (220 / (width - 1)) * ((tile.id - 1) % width) + \",\" + 0.8 +\")\",\n            }}>\n            {tile.text}\n          </div>\n        </button>\n      )}\n    </Motion>\n  )\n}\n\nexport default Tile"]},"metadata":{},"sourceType":"module"}