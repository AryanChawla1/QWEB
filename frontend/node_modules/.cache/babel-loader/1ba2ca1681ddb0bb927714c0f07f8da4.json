{"ast":null,"code":"const getTileFromId = (id, tiles) => {\n  for (let i = 0; i < tiles.length; i++) {\n    if (tiles[i].id === id) {\n      return tiles[i - 1];\n    }\n  }\n\n  console.log(\"[!] getTileFromId - no element found\");\n};\n\nconst packageTiles = (tiles, width) => {\n  // Cleans up tiles array for use in the the backend (2D Array of ids)\n  const tileIds = tiles.map(tile => tile.id);\n  let packagedTiles = [];\n\n  for (let row = 0; row < width; row++) {\n    packagedTiles.push([]);\n\n    for (let col = 0; col < width; col++) {\n      packagedTiles[row].push(tileIds[row * width + col]);\n    }\n  }\n\n  return packagedTiles;\n};\n\nconst getVisualPosition = (tile, tileWidth) => {\n  return {\n    x: tile.col * tileWidth,\n    y: tile.row * tileWidth\n  };\n};\n\nexport default {\n  getTileFromId,\n  packageTiles,\n  getVisualPosition\n};","map":{"version":3,"sources":["C:/Users/Aryan Chawla/QWEB/frontend/src/helpers.js"],"names":["getTileFromId","id","tiles","i","length","console","log","packageTiles","width","tileIds","map","tile","packagedTiles","row","push","col","getVisualPosition","tileWidth","x","y"],"mappings":"AAAA,MAAMA,aAAa,GAAG,CAACC,EAAD,EAAKC,KAAL,KAAe;AACjC,OAAK,IAAIC,CAAC,GAAC,CAAX,EAAcA,CAAC,GAACD,KAAK,CAACE,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AACjC,QAAID,KAAK,CAACC,CAAD,CAAL,CAASF,EAAT,KAAgBA,EAApB,EAAwB;AACtB,aAAOC,KAAK,CAACC,CAAC,GAAC,CAAH,CAAZ;AACD;AACF;;AACDE,EAAAA,OAAO,CAACC,GAAR,CAAY,sCAAZ;AACD,CAPH;;AAUA,MAAMC,YAAY,GAAG,CAACL,KAAD,EAAQM,KAAR,KAAkB;AACnC;AACA,QAAMC,OAAO,GAAGP,KAAK,CAACQ,GAAN,CAAWC,IAAD,IAAUA,IAAI,CAACV,EAAzB,CAAhB;AACA,MAAIW,aAAa,GAAG,EAApB;;AACA,OAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACL,KAApB,EAA2BK,GAAG,EAA9B,EAAkC;AAChCD,IAAAA,aAAa,CAACE,IAAd,CAAmB,EAAnB;;AACA,SAAK,IAAIC,GAAG,GAAC,CAAb,EAAgBA,GAAG,GAACP,KAApB,EAA2BO,GAAG,EAA9B,EAAkC;AAChCH,MAAAA,aAAa,CAACC,GAAD,CAAb,CAAmBC,IAAnB,CAAwBL,OAAO,CAACI,GAAG,GAACL,KAAJ,GAAYO,GAAb,CAA/B;AACD;AACF;;AACD,SAAOH,aAAP;AACD,CAXH;;AAaA,MAAMI,iBAAiB,GAAG,CAACL,IAAD,EAAOM,SAAP,KAAqB;AAC7C,SAAO;AACLC,IAAAA,CAAC,EAAEP,IAAI,CAACI,GAAL,GAAWE,SADT;AAELE,IAAAA,CAAC,EAAER,IAAI,CAACE,GAAL,GAAWI;AAFT,GAAP;AAID,CALD;;AAQA,eAAe;AAACjB,EAAAA,aAAD;AAAgBO,EAAAA,YAAhB;AAA8BS,EAAAA;AAA9B,CAAf","sourcesContent":["const getTileFromId = (id, tiles) => {\n    for (let i=0; i<tiles.length; i++) {\n      if (tiles[i].id === id) {\n        return tiles[i-1]\n      }\n    }\n    console.log(\"[!] getTileFromId - no element found\")\n  }\n\n\nconst packageTiles = (tiles, width) => {\n    // Cleans up tiles array for use in the the backend (2D Array of ids)\n    const tileIds = tiles.map((tile) => tile.id)\n    let packagedTiles = []\n    for (let row=0; row<width; row++) {\n      packagedTiles.push([])\n      for (let col=0; col<width; col++) {\n        packagedTiles[row].push(tileIds[row*width + col])\n      }\n    }\n    return packagedTiles\n  }\n\nconst getVisualPosition = (tile, tileWidth) => {\n  return {\n    x: tile.col * tileWidth,\n    y: tile.row * tileWidth\n  }\n}\n\n\nexport default {getTileFromId, packageTiles, getVisualPosition}\n"]},"metadata":{},"sourceType":"module"}