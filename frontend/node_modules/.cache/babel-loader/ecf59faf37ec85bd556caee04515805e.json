{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Aryan Chawla\\\\QWEB\\\\frontend\\\\src\\\\components\\\\Tile.js\";\nimport React from 'react';\nimport { Motion, spring } from \"react-motion\";\nimport helpers from '../helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = _ref => {\n  let {\n    width,\n    tiles,\n    tile,\n    boardWidth,\n    tileHeld,\n    tileReleased,\n    tileMovedOnto\n  } = _ref;\n  const tileWidth = boardWidth / width;\n  const visualPos = helpers.getVisualPosition(tile, tileWidth);\n  const fontSize = tile.id < 100 ? tileWidth * 0.6 : tileWidth * 0.55; //Allows 3 digit numbers to fit in box (e.g. 100)\n\n  const motionStyle = {\n    translateX: spring(visualPos.x, {\n      stiffness: 800,\n      damping: 50\n    }),\n    translateY: spring(visualPos.y, {\n      stiffness: 800,\n      damping: 50\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(Motion, {\n    style: motionStyle,\n    children: _ref2 => {\n      let {\n        translateX,\n        translateY\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"tile\",\n        onMouseDown: () => tileHeld(tile),\n        onMouseUp: () => tileReleased(tile),\n        onMouseLeave: () => tileReleased(tile),\n        onMouseEnter: () => tileMovedOnto(tile),\n        style: {\n          width: tileWidth,\n          height: tileWidth,\n          transform: `translate3d(${translateX}px, ${translateY}px, 0)`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tileOuter\",\n          style: {\n            width: tileWidth,\n            height: tileWidth\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tileInner\",\n          style: {\n            width: tileWidth * 0.95,\n            height: tileWidth * 0.95,\n            fontSize: fontSize // backgroundColor: \"rgba(\" + (255 / (width)) * (width - ((tile.id - 1) % width)) + \",\" + (220 / (width - 1)) * Math.floor((tile.id - 1) / width) + \",\" + (220 / (width - 1)) * ((tile.id - 1) % width) + \",\" + 0.8 +\")\",\n\n          },\n          children: tile.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["C:/Users/Aryan Chawla/QWEB/frontend/src/components/Tile.js"],"names":["React","Motion","spring","helpers","Tile","width","tiles","tile","boardWidth","tileHeld","tileReleased","tileMovedOnto","tileWidth","visualPos","getVisualPosition","fontSize","id","motionStyle","translateX","x","stiffness","damping","translateY","y","height","transform","text"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,MAAjB,QAA+B,cAA/B;AACA,OAAOC,OAAP,MAAoB,YAApB;;;AAEA,MAAMC,IAAI,GAAG,QAA+E;AAAA,MAA9E;AAAEC,IAAAA,KAAF;AAASC,IAAAA,KAAT;AAAgBC,IAAAA,IAAhB;AAAsBC,IAAAA,UAAtB;AAAkCC,IAAAA,QAAlC;AAA4CC,IAAAA,YAA5C;AAA0DC,IAAAA;AAA1D,GAA8E;AAC1F,QAAMC,SAAS,GAAGJ,UAAU,GAAGH,KAA/B;AACA,QAAMQ,SAAS,GAAGV,OAAO,CAACW,iBAAR,CAA0BP,IAA1B,EAAgCK,SAAhC,CAAlB;AACA,QAAMG,QAAQ,GAAKR,IAAI,CAACS,EAAL,GAAU,GAAX,GAAkBJ,SAAS,GAAG,GAA9B,GAAoCA,SAAS,GAAG,IAAlE,CAH0F,CAGlB;;AACxE,QAAMK,WAAW,GAAG;AAClBC,IAAAA,UAAU,EAAEhB,MAAM,CAACW,SAAS,CAACM,CAAX,EAAc;AAAEC,MAAAA,SAAS,EAAE,GAAb;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAd,CADA;AAElBC,IAAAA,UAAU,EAAEpB,MAAM,CAACW,SAAS,CAACU,CAAX,EAAc;AAAEH,MAAAA,SAAS,EAAE,GAAb;AAAkBC,MAAAA,OAAO,EAAE;AAA3B,KAAd;AAFA,GAApB;AAKA,sBACE,QAAC,MAAD;AAAQ,IAAA,KAAK,EAAEJ,WAAf;AAAA,cACG;AAAA,UAAC;AAAEC,QAAAA,UAAF;AAAcI,QAAAA;AAAd,OAAD;AAAA,0BACC;AAAQ,QAAA,SAAS,EAAC,MAAlB;AAAyB,QAAA,WAAW,EAAE,MAAMb,QAAQ,CAACF,IAAD,CAApD;AAA4D,QAAA,SAAS,EAAE,MAAMG,YAAY,CAACH,IAAD,CAAzF;AACA,QAAA,YAAY,EAAE,MAAMG,YAAY,CAACH,IAAD,CADhC;AACwC,QAAA,YAAY,EAAE,MAAMI,aAAa,CAACJ,IAAD,CADzE;AAEA,QAAA,KAAK,EAAE;AACLF,UAAAA,KAAK,EAAEO,SADF;AAELY,UAAAA,MAAM,EAAEZ,SAFH;AAGLa,UAAAA,SAAS,EAAG,eAAcP,UAAW,OAAMI,UAAW;AAHjD,SAFP;AAAA,gCAOE;AAAK,UAAA,SAAS,EAAC,WAAf;AACA,UAAA,KAAK,EAAE;AACLjB,YAAAA,KAAK,EAAEO,SADF;AAELY,YAAAA,MAAM,EAAEZ;AAFH;AADP;AAAA;AAAA;AAAA;AAAA,gBAPF,eAaE;AAAK,UAAA,SAAS,EAAC,WAAf;AACE,UAAA,KAAK,EAAE;AACLP,YAAAA,KAAK,EAAEO,SAAS,GAAC,IADZ;AAELY,YAAAA,MAAM,EAAEZ,SAAS,GAAC,IAFb;AAGLG,YAAAA,QAAQ,EAAEA,QAHL,CAIL;;AAJK,WADT;AAAA,oBAOGR,IAAI,CAACmB;AAPR;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAtCD;;KAAMtB,I;AAwCN,eAAeA,IAAf","sourcesContent":["import React from 'react'\nimport { Motion, spring } from \"react-motion\"\nimport helpers from '../helpers'\n\nconst Tile = ({ width, tiles, tile, boardWidth, tileHeld, tileReleased, tileMovedOnto }) => {\n  const tileWidth = boardWidth / width\n  const visualPos = helpers.getVisualPosition(tile, tileWidth)\n  const fontSize = ((tile.id < 100) ? tileWidth * 0.6 : tileWidth * 0.55) //Allows 3 digit numbers to fit in box (e.g. 100)\n  const motionStyle = {\n    translateX: spring(visualPos.x, { stiffness: 800, damping: 50 }),\n    translateY: spring(visualPos.y, { stiffness: 800, damping: 50 })\n  }\n\n  return (\n    <Motion style={motionStyle}>\n      {({ translateX, translateY }) => (\n        <button className=\"tile\" onMouseDown={() => tileHeld(tile)} onMouseUp={() => tileReleased(tile)}\n        onMouseLeave={() => tileReleased(tile)} onMouseEnter={() => tileMovedOnto(tile)}\n        style={{\n          width: tileWidth,\n          height: tileWidth,\n          transform: `translate3d(${translateX}px, ${translateY}px, 0)`,\n          }}>\n          <div className=\"tileOuter\"\n          style={{\n            width: tileWidth,\n            height: tileWidth,\n            }}>\n          </div>\n          <div className=\"tileInner\"\n            style={{\n              width: tileWidth*0.95,\n              height: tileWidth*0.95,\n              fontSize: fontSize,\n              // backgroundColor: \"rgba(\" + (255 / (width)) * (width - ((tile.id - 1) % width)) + \",\" + (220 / (width - 1)) * Math.floor((tile.id - 1) / width) + \",\" + (220 / (width - 1)) * ((tile.id - 1) % width) + \",\" + 0.8 +\")\",\n            }}>\n            {tile.text}\n          </div>\n        </button>\n      )}\n    </Motion>\n  )\n}\n\nexport default Tile"]},"metadata":{},"sourceType":"module"}